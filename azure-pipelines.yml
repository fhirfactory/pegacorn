# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

resources:
  repositories:
  - repository: PegacornBuildingblocks
    type: github
    endpoint: fhirfactory
    name: fhirfactory/pegacorn-buildingblocks
  - repository: PegacornBuildingblocksEdge
    type: github
    endpoint: fhirfactory
    name: fhirfactory/pegacorn-buildingblocks-edge
  - repository: PegacornBuildingblocksProcessingPlant
    type: github
    endpoint: fhirfactory
    name: fhirfactory/pegacorn-buildingblocks-processingplant
  - repository: PegacornDeployment
    type: github
    endpoint: fhirfactory
    name: fhirfactory/pegacorn-deployment
  - repository: PegacornDeploymentDatasets
    type: github
    endpoint: fhirfactory
    name: fhirfactory/pegacorn-deployment-datasets
  - repository: PegacornDeploymentProperties
    type: github
    endpoint: fhirfactory
    name: fhirfactory/pegacorn-deployment-properties
  - repository: PegacornDeploymentTopology
    type: github
    endpoint: fhirfactory
    name: fhirfactory/pegacorn-deployment-topology
  - repository: PegacornLadon
    type: github
    endpoint: fhirfactory
    name: fhirfactory/pegacorn-ladon
  - repository: PegacornLadonDtCache
    type: github
    endpoint: fhirfactory
    name: fhirfactory/pegacorn-ladon-dtcache
  - repository: PegacornLadonEdge
    type: github
    endpoint: fhirfactory
    name: fhirfactory/pegacorn-ladon-edge
  - repository: PegacornLadonMDR
    type: github
    endpoint: fhirfactory
    name: fhirfactory/pegacorn-ladon-mdr
  - repository: PegacornLadonModel
    type: github
    endpoint: fhirfactory
    name: fhirfactory/pegacorn-ladon-model
  - repository: PegacornLadonProcessingPlant
    type: github
    endpoint: fhirfactory
    name: fhirfactory/pegacorn-ladon-processingplant
  - repository: PegacornLadonSubsystem
    type: github
    endpoint: fhirfactory
    name: fhirfactory/pegacorn-ladon-subsystem
  - repository: PegacornLadonTwin
    type: github
    endpoint: fhirfactory
    name: fhirfactory/pegacorn-ladon-twin
  - repository: PegacornLadonTwinBehaviours
    type: github
    endpoint: fhirfactory
    name: fhirfactory/pegacorn-ladon-twin-behaviours
  - repository: PegacornLadonTwinStateSpace
    type: github
    endpoint: fhirfactory
    name: fhirfactory/pegacorn-ladon-twin-statespace
  - repository: PegacornPlatform
    type: github
    endpoint: fhirfactory
    name: fhirfactory/pegacorn-platform
  - repository: PegacornPlatformCommoncode
    type: github
    endpoint: fhirfactory
    name: fhirfactory/pegacorn-platform-commoncode
  - repository: PegacornPlatformPetasos
    type: github
    endpoint: fhirfactory
    name: fhirfactory/pegacorn-platform-petasos
  - repository: PegacornPlatformPetasosCore
    type: github
    endpoint: fhirfactory
    name: fhirfactory/pegacorn-platform-petasos-core
  - repository: PegacornPlatformPetasosDatasets
    type: github
    endpoint: fhirfactory
    name: fhirfactory/pegacorn-platform-petasos-datasets
  - repository: PegacornPlatformPetasosIpc
    type: github
    endpoint: fhirfactory
    name: fhirfactory/pegacorn-platform-petasos-ipc
  - repository: PegacornPlatformPetasosModel
    type: github
    endpoint: fhirfactory
    name: fhirfactory/pegacorn-platform-petasos-model
  - repository: PegacornPlatformPetasosTopology
    type: github
    endpoint: fhirfactory
    name: fhirfactory/pegacorn-platform-petasos-topology
  - repository: PegacornPlatformSamples
    type: github
    endpoint: fhirfactory
    name: fhirfactory/pegacorn-platform-samples

trigger:
- master

variables:
# Could potentially parse this from  $(Build.Repository.Name) = fhirfactory/pegacorn
  baseMavenRepoName: 'pegacorn'

pool:
  vmImage: 'ubuntu-latest'

steps:
- checkout: self
- checkout: PegacornBuildingblocks
- checkout: PegacornBuildingblocksEdge
- checkout: PegacornBuildingblocksProcessingPlant
- checkout: PegacornDeployment
- checkout: PegacornDeploymentDatasets
- checkout: PegacornDeploymentProperties
- checkout: PegacornDeploymentTopology
- checkout: PegacornLadon
- checkout: PegacornLadonDtCache
- checkout: PegacornLadonEdge
- checkout: PegacornLadonMDR
- checkout: PegacornLadonModel
- checkout: PegacornLadonProcessingPlant
- checkout: PegacornLadonSubsystem
- checkout: PegacornLadonTwin
- checkout: PegacornLadonTwinBehaviours
- checkout: PegacornLadonTwinStateSpace
- checkout: PegacornPlatform
- checkout: PegacornPlatformCommoncode
- checkout: PegacornPlatformPetasos
- checkout: PegacornPlatformPetasosCore
- checkout: PegacornPlatformPetasosDatasets
- checkout: PegacornPlatformPetasosIpc
- checkout: PegacornPlatformPetasosModel
- checkout: PegacornPlatformPetasosTopology
- checkout: PegacornPlatformSamples
- task: DownloadSecureFile@1
  name: mvnSettings
  displayName: 'Download Maven Settings'
  inputs:
    secureFile: 'settings-old.xml'
- script: |
    echo Installing $(mvnSettings.secureFilePath) to ${HOME}/.m2/settings.xml ...
    sudo chown root:root $(mvnSettings.secureFilePath)
    sudo chmod a+r $(mvnSettings.secureFilePath)
    sudo mkdir -p -m=777 ${HOME}/.m2
    sudo cp -f $(mvnSettings.secureFilePath) ${HOME}/.m2/settings.xml
    echo 'Current directory contents are'
    sudo ls -la
    sudo cat $(mvnSettings.secureFilePath)
- task: Maven@3
  inputs:
    mavenPomFile: '$(baseMavenRepoName)/pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'deploy'
    options: '-DskipTests'
#    options: '--non-recursive'
# Lookup the maven version and set in a variable, based on
# 1. https://stackoverflow.com/questions/56394615/how-to-display-the-project-version-as-release-name-in-azure-devops
# 2. https://docs.microsoft.com/en-us/azure/devops/pipelines/process/variables
# 3. https://stackoverflow.com/questions/2264428/how-to-convert-a-string-to-lower-case-in-bash
- bash: |
    cd $(System.DefaultWorkingDirectory)/$(baseMavenRepoName)/
    v=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | tr '[:upper:]' '[:lower:]')
    echo "##vso[task.setvariable variable=projectVersion]$v"
    echo ProjectVersion=$(projectVersion)
